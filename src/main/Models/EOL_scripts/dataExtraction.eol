
var userData = new Map();
var itemData = new Map();
var ratingsData = new Sequence();
var categoriesData = new Sequence();


//domain!Item.allInstances().println();

for (user in domain!User.allInstances()) {
    var userDetails = new Map();
    userDetails.put("userId", user.id); // Use user.get("Id") to access the property
    userDetails.put("userName", user.name); // Similarly, use user.get("name")
    userData.put(user.id, userDetails); // Use user.get("Id") for the key
}

for (Item in domain!Item.allInstances()) {
    var itemDetails = new Map();
    itemDetails.put("itemId", Item.id);
    itemDetails.put("itemName", Item.name);
    itemDetails.put("category", Item.category);
    itemData.put(Item.id, itemDetails); 	
    
}


for (userItemRow in recommendersystemModel!UserItemMatrix.all.first().rows) {
    var userId = userItemRow._user.id;
    var itemId = userItemRow._item.id;
    var rating = userItemRow.value.id;

    var ratingData = new Map();

    ratingData.put("userId", userId);
    ratingData.put("itemId", itemId);
    ratingData.put("rating", rating);

    ratingsData.add(ratingData);
}


for (ContentBasedPreference in recommendersystemModel!ContentBasedPreference.allInstances()) {
    var categoriesDetails = new Map();
   
    categoriesDetails.put("userId", ContentBasedPreference._user.id);
    categoriesDetails.put("userName", ContentBasedPreference._user.name);
    categoriesDetails.put("prefs", ContentBasedPreference._prefs.category);
    categoriesData.add(categoriesDetails);
    //System.out.println(categoriesData);
}

//recommendersystemModel!ContentBasedPreference.attributes().println();
var extractedData = new Map();
extractedData.put("userData", userData);
extractedData.put("itemData", itemData);
extractedData.put("ratingsData", ratingsData);
extractedData.put("categoriesData", categoriesData);

//System.out.println(extractedData);

//System.out.println(userData);
//System.out.println(itemData);
//System.out.println(ratingsData);
//System.out.println(categoriesData);


return extractedData;
/*

////////////////////////////////////

var userData = new Map();
var itemData = new Map();
var ratingsData = new Sequence();
var categoriesData = new Sequence();


//domain!Item.allInstances().println();

for (user in User.allInstances()) {
    var userDetails = new Map();
    userDetails.put("userId", user.id); // Use user.get("Id") to access the property
    userDetails.put("userName", user.name); // Similarly, use user.get("name")
    userData.put(user.id, userDetails); // Use user.get("Id") for the key
}

for (Item in Item.allInstances()) {
    var itemDetails = new Map();
    itemDetails.put("itemId", Item.id);
    itemDetails.put("itemName", Item.name);
    itemDetails.put("category", Item.category);
    itemData.put(Item.id, itemDetails); 	
    
}


for (userItemRow in UserItemMatrix.all.first().rows) {
    var userId = userItemRow._user.id;
    //var userId = userItemRow._user.id;
    var itemId = userItemRow._item.id;
    var rating = userItemRow.value;

    var ratingData = new Map();

    ratingData.put("userId", userId);
    ratingData.put("itemId", itemId);
    ratingData.put("rating", rating);

    ratingsData.add(ratingData);
}


for (ContentBasedPreference in ContentBasedPreference.allInstances()) {
    var categoriesDetails = new Map();
   
    categoriesDetails.put("userId", ContentBasedPreference._user.id);
    categoriesDetails.put("userName", ContentBasedPreference._user.name);
    categoriesDetails.put("prefs", ContentBasedPreference._prefs.category);
    categoriesData.add(categoriesDetails);
    //System.out.println(categoriesData);
}

//recommendersystemModel!ContentBasedPreference.attributes().println();
var extractedData = new Map();
extractedData.put("userData", userData);
extractedData.put("itemData", itemData);
extractedData.put("ratingsData", ratingsData);
extractedData.put("categoriesData", categoriesData);

//System.out.println(extractedData);

//System.out.println(userData);
//System.out.println(itemData);
//System.out.println(ratingsData);
//System.out.println(categoriesData);


return extractedData;
*/
